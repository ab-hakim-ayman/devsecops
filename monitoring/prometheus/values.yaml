# values.yaml for Prometheus (Helm chart)
global:
  scrape_interval: 15s
  evaluation_interval: 30s
  external_labels:
    cluster: "prod-cluster" # Change per environment

server:
  enabled: true
  persistentVolume:
    enabled: true
    storageClass: "standard" # Adjust to your storage class
    accessModes: ["ReadWriteOnce"]
    size: 50Gi
  retention: "15d"
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1500m
      memory: 3Gi
  additionalScrapeConfigs:
    # Reference a Kubernetes secret with extra scrape jobs
    name: prometheus-additional-scrape-configs
    key: additional-scrape-configs.yaml

alertmanager:
  enabled: true
  persistentVolume:
    enabled: true
    size: 5Gi
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

pushgateway:
  enabled: false

serverFiles:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 30s
    rule_files:
      - /etc/prometheus/rules/prometheus_rules.yaml
    scrape_configs:
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: kube-state-metrics

      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: node-exporter
